// <auto-generated />
using System;
using Animal_Shelter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Animal_Shelter.Migrations
{
    [DbContext(typeof(ShelterDbContext))]
    [Migration("20250825180332_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Animal_Shelter.Data.Entities.AnimalQuestionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<int?>("BreedId1")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId1")
                        .HasColumnType("int");

                    b.Property<bool>("HasMedicalIssues")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSterilized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVaccinated")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int?>("SpeciesId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.HasIndex("BreedId1");

                    b.HasIndex("GenderId");

                    b.HasIndex("GenderId1");

                    b.HasIndex("SpeciesId");

                    b.HasIndex("SpeciesId1");

                    b.ToTable("AnimalQuestionnaires");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmissionDate = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Age = 3,
                            BreedId = 1,
                            Description = "Friendly and energetic Labrador, loves kids.",
                            GenderId = 1,
                            HasMedicalIssues = false,
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/02/19/10/00/dog-1209621_960_720.jpg",
                            IsSterilized = true,
                            IsVaccinated = true,
                            Name = "Buddy",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdmissionDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Age = 2,
                            BreedId = 3,
                            Description = "Calm Persian cat, prefers quiet places.",
                            GenderId = 2,
                            HasMedicalIssues = false,
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/11/09/21/41/cat-2934720_960_720.jpg",
                            IsSterilized = false,
                            IsVaccinated = true,
                            Name = "Misty",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 3,
                            AdmissionDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Age = 1,
                            BreedId = 4,
                            Description = "Playful Siamese kitten, full of energy.",
                            GenderId = 1,
                            HasMedicalIssues = false,
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/02/10/16/37/siamese-cat-1192026_960_720.jpg",
                            IsSterilized = false,
                            IsVaccinated = false,
                            Name = "Shadow",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 4,
                            AdmissionDate = new DateTime(2022, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Age = 4,
                            BreedId = 2,
                            Description = "German Shepherd, intelligent and loyal, has mild hip dysplasia.",
                            GenderId = 2,
                            HasMedicalIssues = true,
                            ImageUrl = "https://cdn.pixabay.com/photo/2015/06/03/13/13/german-shepherd-796259_960_720.jpg",
                            IsSterilized = true,
                            IsVaccinated = true,
                            Name = "Lola",
                            SpeciesId = 1
                        });
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("Breeds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Labrador",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "German Shepherd",
                            SpeciesId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Persian",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Siamese",
                            SpeciesId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dwarf Rabbit",
                            SpeciesId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Macaw",
                            SpeciesId = 4
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mixed",
                            SpeciesId = 5
                        });
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Unknown"
                        });
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rabbit"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bird"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.AnimalQuestionnaire", b =>
                {
                    b.HasOne("Animal_Shelter.Data.Entities.Breed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Animal_Shelter.Data.Entities.Breed", null)
                        .WithMany("Animals")
                        .HasForeignKey("BreedId1");

                    b.HasOne("Animal_Shelter.Data.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Animal_Shelter.Data.Entities.Gender", null)
                        .WithMany("Animals")
                        .HasForeignKey("GenderId1");

                    b.HasOne("Animal_Shelter.Data.Entities.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Animal_Shelter.Data.Entities.Species", null)
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId1");

                    b.Navigation("Breed");

                    b.Navigation("Gender");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Breed", b =>
                {
                    b.HasOne("Animal_Shelter.Data.Entities.Species", "Species")
                        .WithMany()
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Breed", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Gender", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Animal_Shelter.Data.Entities.Species", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
